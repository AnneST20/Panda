@model IEnumerable<Panda.Models.Ad>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="height:100%;">
    <div class="header-left" style="width:40%"></div>
    <div id="map" class="header-right" style='width: 60%;'></div>
</div>


<script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiYW5uZWVldHR0aWlpaSIsImEiOiJjbGYyZ3J5eTUwaWR2M3JueWo5NzVnM3NhIn0.AgnX_maHaDWflibAL827kQ';
    const map = new mapboxgl.Map({
        container: 'map', // container ID
        // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
        style: 'mapbox://styles/mapbox/streets-v12', // style URL
        center: [30.52, 50.45], // starting position [lng, lat]
        zoom: 9 // starting zoom

    });

    map.on('style.load', () => {
        map.setFog({}); // Set the default atmosphere style
    });

    map.on('load', () => {
        map.addSource('ads', {
            type: 'geojson',
            // Use a URL for the value for the `data` property.
            data: 'C:\\Users\\anna.stetsenko\\Documents\\Anna\\Panda\\Panda.Library\\GeoJSON\\ads.geojson';
        });

        map.addLayer({
            'id': 'ads-layer',
            'type': 'circle',
            'source': 'ads',
            'paint': {
                'circle-radius': 4,
                'circle-stroke-width': 1,
                'circle-color': 'green',
                'circle-stroke-color': 'white'
            }
        });
    });
</script>


@*@{
    var coorinated = Model.Select(ad => ad.Coordinates).ToList();
    foreach (var c in coorinated)
    {
        <script>
            // Set marker options.
            var marker = new mapboxgl.Marker({
                color: "green",
                
            }).setLngLat(@c)
                .addTo(map);
        </script>
    }
}*@

<div>
    <div class="header-left"></div>
    <div class="header-right">
        <div id="map"></div>
    </div>
</div>


@*<h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Url)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Adress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdressLink)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Square)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rooms)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Floor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Url)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdressLink)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Square)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rooms)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Floor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

    </table>*@
