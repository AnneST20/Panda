@model IEnumerable<Panda.Models.Ad>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="width: -webkit-fill-available;">
    <div class="header-left" style="width:40%">
        <div class="ads-filter">
            <div class="search-filters-container">
                <div class="search-container">
                    <input class="search-field" />
                    <a class="btn btn-light search-icon-btn">
                        <img src="~/Content/images/IconSearch.png" class="search-icon" />
                    </a>
                </div>
                <div class="filters-container">
                    <div class="col col1">
                        <div>
                            Ціна
                            <input class="filter" type="number"/>
                            <input class="filter" type="number"/>
                        </div>
                        <div>
                            Площа
                            <input class="filter" type="number"/>
                            <input class="filter" type="number"/>
                        </div>
                    </div>
                    <div class="col col2">
                        <div>
                            Кімнати
                            <input class="filter" type="number"/>
                            <input class="filter" type="number"/>
                        </div>
                        <div>
                            Поверх
                            <input class="filter" type="number"/>
                            <input class="filter" type="number"/>
                        </div>
                    </div>
                    <div class="col col3">
                        <div>
                            Тварини дозволені
                            <input class="filter" type="checkbox"/>
                        </div>
                        <div>
                            Діти дозволені
                            <input class="filter" type="checkbox"/>
                        </div>
                    </div>
                </div>
            </div>
            
            
        </div>
        <h4 class="ads-h4">
            Всього знайдено оголошень: @Model.Count()
        </h4>
        @foreach(var ad in Model)
            {
            <div class="ads-container">
                <div class="header-left ads-gallery">
                    <img src="@ad.Gallery.FirstOrDefault().Url" />
                </div>
                <div class="header-right ads-info">
                    <h3>@ad.Price</h3>
                    <p>@ad.Adress</p>
                    <div>
                        <img src="~/Content/images/IconRooms.png" class="ads-info-icon" />
                        @ad.Rooms
                    </div>
                    <div>
                        <img src="~/Content/images/IconSquare.png" class="ads-info-icon" />
                        @ad.Square
                    </div>
                    <div>
                        <img src="~/Content/images/IconFloor.png" class="ads-info-icon"/>
                        @ad.Floor
                    </div>
                    <div>
                        <img src="~/Content/images/IconChildren.png" class="ads-info-icon"/>
                        @(ad.ChildrenAllowed ? "Yes" : "No")
                    </div>
                    <div>
                        <img src="~/Content/images/IconAnimal.png" class="ads-info-icon"/>
                        @(ad.PetsAllowed ? "Yes" : "No")
                    </div>
                    <input class="btn" type="button" onclick="location.href='@ad.Url';" value="Детальніше" />
                </div>
            </div> 
            }
    </div>
    <div id="map" class="header-right" style='width: 60%;'></div>
</div>

<script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiYW5uZWVldHR0aWlpaSIsImEiOiJjbGYyZ3J5eTUwaWR2M3JueWo5NzVnM3NhIn0.AgnX_maHaDWflibAL827kQ';
    const map = new mapboxgl.Map({
        container: 'map', // container ID
        // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
        style: 'mapbox://styles/mapbox/streets-v12', // style URL
        projection: 'globe', // Display the map as a globe, since satellite-v9 defaults to Mercator
        zoom: 10, // starting zoom
        center: [30.52, 50.45] // // starting center in [lng, lat]
    });

    map.on('style.load', () => {
        map.setFog({}); // Set the default atmosphere style
    });

    map.addControl(new mapboxgl.NavigationControl());

    var url = "./Content/ads.json";

    map.on('load', function () {
        map.addSource("route", {
            type: "geojson",
            data: url
        });

        map.addLayer({
            'id': "route",
            'type': "circle",
            'source': "route",
            'paint': {
                'circle-radius': 3,
                'circle-color': "green"
            }
        });

        const layers = map.getStyle().layers;
        const labelLayerId = layers.find(
            (layer) => layer.type === 'symbol' && layer.layout['text-field']
        ).id;

        // The 'building' layer in the Mapbox Streets
        // vector tileset contains building height data
        // from OpenStreetMap.
        map.addLayer(
            {
                'id': 'add-3d-buildings',
                'source': 'composite',
                'source-layer': 'building',
                'filter': ['==', 'extrude', 'true'],
                'type': 'fill-extrusion',
                'minzoom': 15,
                'paint': {
                    'fill-extrusion-color': '#aaa',

                    // Use an 'interpolate' expression to
                    // add a smooth transition effect to
                    // the buildings as the user zooms in.
                    'fill-extrusion-height': [
                        'interpolate',
                        ['linear'],
                        ['zoom'],
                        15,
                        0,
                        15.05,
                        ['get', 'height']
                    ],
                    'fill-extrusion-base': [
                        'interpolate',
                        ['linear'],
                        ['zoom'],
                        15,
                        0,
                        15.05,
                        ['get', 'min_height']
                    ],
                    'fill-extrusion-opacity': 0.6
                }
            },
            labelLayerId
        );
    });
</script>


@*@{
    var coorinated = Model.Select(ad => ad.Coordinates).ToList();
    foreach (var c in coorinated)
    {
        <script>
            // Set marker options.
            var marker = new mapboxgl.Marker({
                color: "green",
                
            }).setLngLat(@c)
                .addTo(map);
        </script>
    }
}*@

<div>
    <div class="header-left"></div>
    <div class="header-right">
        <div id="map"></div>
    </div>
</div>


@*<h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Url)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Adress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdressLink)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Square)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rooms)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Floor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Url)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Adress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdressLink)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Square)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rooms)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Floor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

    </table>*@
